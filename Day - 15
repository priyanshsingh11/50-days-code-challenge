/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        vector<int> arr1;
        vector<int> arr2;

        while (l1){
            arr1.push_back(l1->val);
            l1=l1->next;
        }
        while (l2){
            arr2.push_back(l2->val);
            l2=l2->next;
        }

        ListNode* dummy = new ListNode(0);
        ListNode* current = dummy;
        int carry = 0;
        int i = 0;

        int n1 = arr1.size();
        int n2 = arr2.size();

        while (i < n1 || i < n2 || carry){
            int val1 = (i < n1) ? arr1[i] : 0;  
            int val2 = (i < n2) ? arr2[i] : 0;

            int sum = val1 + val2 + carry;
            carry = sum/10;

            current->next = new ListNode(sum%10);
            current = current->next;
            i++;
        }

        return dummy->next;
        
    }
};
