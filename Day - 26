class Solution {
private:
    int findfirst(vector<int>& nums, int target) {
        int start = 0;
        int end = nums.size()-1;
        int res = -1;

        while (start <= end){
            int mid = (start+end)/2;
            if (nums[mid]==target){
                res = mid ;
                end = mid -1;
            }
            else if (nums[mid] < target) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }
        return res;
    }

    int findlast(vector<int>& nums, int target) {
        int start = 0;
        int end = nums.size()-1;
        int res = -1;

        while (start <= end){
            int mid = (start+end)/2;
            if (nums[mid]==target){
                res = mid ;
                start = mid+1;
            }
            else if (nums[mid] < target) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }
        return res;
    }

public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int first = findfirst(nums, target); 
        int last = findlast(nums,target);
        return {first,last};
    }
};
